name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests
        run: ./gradlew test

      - name: Generate test report
        if: always()
        run: |
          echo "Test Results:"
          if [ -f build/test-results/test/*.xml ]; then
            echo "Tests completed"
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test/
          retention-days: 30

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Spotless check
        run: ./gradlew spotlessCheck

      - name: Run Spotless apply (if check fails)
        if: failure()
        run: |
          echo "Spotless check failed. Run './gradlew spotlessApply' locally to fix formatting issues."
          exit 1

  deploy:
    name: Deploy to Production (Simulated)
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build production artifact
        run: ./gradlew bootJar

      - name: Simulate deployment preparation
        run: |
          echo "=========================================="
          echo "üöÄ Preparing deployment to production..."
          echo "=========================================="
          echo ""
          echo "‚úÖ Build artifact created: build/libs/eagle-bank-api-*.jar"
          echo "‚úÖ Running pre-deployment checks..."
          sleep 2
          echo "‚úÖ Pre-deployment checks passed"
          echo ""

      - name: Simulate deployment
        run: |
          echo "=========================================="
          echo "üåê Deploying to production environment..."
          echo "=========================================="
          echo ""
          echo "üì¶ Uploading artifact to server..."
          sleep 2
          echo "‚úÖ Artifact uploaded successfully"
          echo ""
          echo "üîÑ Restarting application server..."
          sleep 2
          echo "‚úÖ Application server restarted"
          echo ""
          echo "üîç Running health checks..."
          sleep 2
          echo "‚úÖ Health checks passed"
          echo ""
          echo "=========================================="
          echo "‚ú® Deployment completed successfully! ‚ú®"
          echo "=========================================="
          echo ""
          echo "üìä Deployment Summary:"
          echo "  - Environment: Production"
          echo "  - Version: ${{ github.sha }}"
          echo "  - Deployed by: ${{ github.actor }}"
          echo "  - Timestamp: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"

      - name: Post-deployment notification
        run: |
          echo "üéâ Eagle Bank API deployed successfully!"
          echo "Ready to serve customers with the latest features."